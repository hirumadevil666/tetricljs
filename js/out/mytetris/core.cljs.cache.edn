{:rename-macros {}, :renames {}, :externs {window {innerWidth {}, setTimeout {}, addEventListener {}, clearInterval {}}, document {getElementById {}}, Error {}, console {log {}}}, :use-macros {}, :excludes #{}, :name mytetris.core, :imports nil, :requires {r reagent.core, reagent.core reagent.core}, :cljs.spec/speced-vars [], :uses nil, :defs {on-window-resize {:protocol-inline nil, :meta {:file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 12, :column 7, :end-line 12, :end-column 23, :arglists (quote ([evt]))}, :name mytetris.core/on-window-resize, :variadic false, :file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :end-column 23, :method-params ([evt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 1, :fn-var true, :arglists (quote ([evt]))}, rot-left {:protocol-inline nil, :meta {:file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 277, :column 7, :end-line 277, :end-column 15, :arglists (quote ([block]))}, :name mytetris.core/rot-left, :variadic false, :file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :end-column 15, :method-params ([block]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 277, :end-line 277, :max-fixed-arity 1, :fn-var true, :arglists (quote ([block]))}, initial-state {:name mytetris.core/initial-state, :file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 202, :column 1, :end-line 202, :end-column 19, :meta {:file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 202, :column 6, :end-line 202, :end-column 19}, :tag cljs.core/IMap}, main {:protocol-inline nil, :meta {:file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 250, :column 7, :end-line 250, :end-column 11, :arglists (quote ([]))}, :name mytetris.core/main, :variadic false, :file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 250, :end-line 250, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, unerase-line? {:protocol-inline nil, :meta {:file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 309, :column 7, :end-line 309, :end-column 20, :arglists (quote ([l]))}, :name mytetris.core/unerase-line?, :variadic false, :file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :end-column 20, :method-params ([l]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 309, :end-line 309, :max-fixed-arity 1, :fn-var true, :arglists (quote ([l]))}, key-down-handler {:protocol-inline nil, :meta {:file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 114, :column 7, :end-line 114, :end-column 23, :arglists (quote ([dom-node state]))}, :name mytetris.core/key-down-handler, :variadic false, :file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :end-column 23, :method-params ([dom-node state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 114, :end-line 114, :max-fixed-arity 2, :fn-var true, :arglists (quote ([dom-node state]))}, map->Block {:protocol-inline nil, :meta {:file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 298, :column 12, :end-line 298, :end-column 17, :internal-ctor true, :factory :map, :arglists (quote ([G__12493]))}, :name mytetris.core/map->Block, :variadic false, :file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :end-column 17, :method-params ([G__12493]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 298, :end-line 298, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__12493]))}, div-with-canvas {:protocol-inline nil, :meta {:file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 15, :column 7, :end-line 15, :end-column 22, :arglists (quote ([dom-node state]))}, :name mytetris.core/div-with-canvas, :variadic false, :file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :end-column 22, :method-params ([dom-node state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 2, :fn-var true, :arglists (quote ([dom-node state]))}, map->Pos {:protocol-inline nil, :meta {:file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 297, :column 12, :end-line 297, :end-column 15, :internal-ctor true, :factory :map, :arglists (quote ([G__12483]))}, :name mytetris.core/map->Pos, :variadic false, :file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :end-column 15, :method-params ([G__12483]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 297, :end-line 297, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__12483]))}, ->Block {:protocol-inline nil, :meta {:file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 298, :column 12, :end-line 298, :end-column 17, :internal-ctor true, :factory :positional, :arglists (quote ([type pattern pos]))}, :name mytetris.core/->Block, :variadic false, :file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :end-column 17, :method-params ([type pattern pos]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 298, :end-line 298, :max-fixed-arity 3, :fn-var true, :arglists (quote ([type pattern pos]))}, get-block-pattern {:protocol-inline nil, :meta {:file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 353, :column 7, :end-line 353, :end-column 24, :arglists (quote ([block]))}, :name mytetris.core/get-block-pattern, :variadic false, :file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :end-column 24, :method-params ([block]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 353, :end-line 353, :max-fixed-arity 1, :fn-var true, :arglists (quote ([block]))}, select-block-index {:name mytetris.core/select-block-index, :file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 293, :column 1, :end-line 293, :end-column 24, :meta {:file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 293, :column 6, :end-line 293, :end-column 24}, :tag function}, window-width {:name mytetris.core/window-width, :file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 11, :column 1, :end-line 11, :end-column 18, :meta {:file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 11, :column 6, :end-line 11, :end-column 18}, :tag any}, Block {:num-fields 3, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name mytetris.core/Block, :file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :end-column 17, :type true, :column 12, :internal-ctor true, :line 298, :record true, :end-line 298, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, get-store-candidate {:protocol-inline nil, :meta {:file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 312, :column 7, :end-line 312, :end-column 26, :arglists (quote ([field])), :doc "消さないブロックのインデクスのシーケンスを返す"}, :name mytetris.core/get-store-candidate, :variadic false, :file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :end-column 26, :method-params ([field]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 312, :end-line 312, :max-fixed-arity 1, :fn-var true, :arglists (quote ([field])), :doc "消さないブロックのインデクスのシーケンスを返す"}, initial-field {:name mytetris.core/initial-field, :file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 307, :column 1, :end-line 307, :end-column 19, :meta {:file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 307, :column 6, :end-line 307, :end-column 19}, :tag any}, make-initial-state {:protocol-inline nil, :meta {:file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 213, :column 7, :end-line 213, :end-column 25, :arglists (quote ([]))}, :name mytetris.core/make-initial-state, :variadic false, :file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :end-column 25, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 213, :end-line 213, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, draw-canvas-contents {:protocol-inline nil, :meta {:file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 99, :column 7, :end-line 99, :end-column 27, :arglists (quote ([canvas state]))}, :name mytetris.core/draw-canvas-contents, :variadic false, :file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :end-column 27, :method-params ([canvas state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 99, :end-line 99, :max-fixed-arity 2, :fn-var true, :arglists (quote ([canvas state]))}, field-width {:name mytetris.core/field-width, :file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 290, :column 1, :end-line 290, :end-column 17, :meta {:file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 290, :column 6, :end-line 290, :end-column 17}, :tag number}, set-block {:protocol-inline nil, :meta {:file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 359, :column 7, :end-line 359, :end-column 16, :arglists (quote ([field block]))}, :name mytetris.core/set-block, :variadic false, :file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :end-column 16, :method-params ([field block]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 359, :end-line 359, :max-fixed-arity 2, :fn-var true, :arglists (quote ([field block]))}, set-line {:name mytetris.core/set-line, :file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 5, :column 1, :end-line 5, :end-column 69, :declared true, :meta {:file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 5, :column 61, :end-line 5, :end-column 69, :declared true}}, field-height {:name mytetris.core/field-height, :file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 291, :column 1, :end-line 291, :end-column 18, :meta {:file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 291, :column 6, :end-line 291, :end-column 18}, :tag number}, init! {:protocol-inline nil, :meta {:file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 256, :column 7, :end-line 256, :end-column 12, :arglists (quote ([]))}, :name mytetris.core/init!, :variadic false, :file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 256, :end-line 256, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, generate-block {:protocol-inline nil, :meta {:file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 300, :column 7, :end-line 300, :end-column 21, :arglists (quote ([]))}, :name mytetris.core/generate-block, :variadic false, :file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 300, :end-line 300, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, move-left {:protocol-inline nil, :meta {:file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 338, :column 7, :end-line 338, :end-column 16, :arglists (quote ([block]))}, :name mytetris.core/move-left, :variadic false, :file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :end-column 16, :method-params ([block]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 338, :end-line 338, :max-fixed-arity 1, :fn-var true, :arglists (quote ([block]))}, set-main-loop {:protocol-inline nil, :meta {:file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 140, :column 7, :end-line 140, :end-column 20, :arglists (quote ([dom-node state handler]))}, :name mytetris.core/set-main-loop, :variadic false, :file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :end-column 20, :method-params ([dom-node state handler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 140, :end-line 140, :max-fixed-arity 3, :fn-var true, :arglists (quote ([dom-node state handler]))}, ->Pos {:protocol-inline nil, :meta {:file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 297, :column 12, :end-line 297, :end-column 15, :internal-ctor true, :factory :positional, :arglists (quote ([x y]))}, :name mytetris.core/->Pos, :variadic false, :file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :end-column 15, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 297, :end-line 297, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y]))}, rot-left-internal {:protocol-inline nil, :meta {:file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 274, :column 7, :end-line 274, :end-column 24, :arglists (quote ([b]))}, :name mytetris.core/rot-left-internal, :variadic false, :file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :end-column 24, :method-params ([b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 274, :end-line 274, :max-fixed-arity 1, :fn-var true, :arglists (quote ([b]))}, game {:protocol-inline nil, :meta {:file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 235, :column 7, :end-line 235, :end-column 11, :arglists (quote ([]))}, :name mytetris.core/game, :variadic false, :file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 235, :end-line 235, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, get-new-interval {:protocol-inline nil, :meta {:file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 158, :column 7, :end-line 158, :end-column 23, :arglists (quote ([current-interval min-interval count]))}, :name mytetris.core/get-new-interval, :variadic false, :file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :end-column 23, :method-params ([current-interval min-interval count]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 158, :end-line 158, :max-fixed-arity 3, :fn-var true, :arglists (quote ([current-interval min-interval count]))}, key-down {:name mytetris.core/key-down, :file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 6, :column 1, :end-line 6, :end-column 138, :declared true, :meta {:file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 6, :column 130, :end-line 6, :end-column 138, :declared true}}, Pos {:num-fields 2, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name mytetris.core/Pos, :file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :end-column 15, :type true, :column 12, :internal-ctor true, :line 297, :record true, :end-line 297, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, move-block {:protocol-inline nil, :meta {:file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 333, :column 7, :end-line 333, :end-column 17, :arglists (quote ([block dx dy]))}, :name mytetris.core/move-block, :variadic false, :file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :end-column 17, :method-params ([block dx dy]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 333, :end-line 333, :max-fixed-arity 3, :fn-var true, :arglists (quote ([block dx dy]))}, render-button {:protocol-inline nil, :meta {:file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 62, :column 7, :end-line 62, :end-column 20, :arglists (quote ([value on-click]))}, :name mytetris.core/render-button, :variadic false, :file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :end-column 20, :method-params ([value on-click]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 2, :fn-var true, :arglists (quote ([value on-click]))}, draw-next-block {:protocol-inline nil, :meta {:file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 93, :column 7, :end-line 93, :end-column 22, :arglists (quote ([canvas block]))}, :name mytetris.core/draw-next-block, :variadic false, :file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :end-column 22, :method-params ([canvas block]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 93, :end-line 93, :max-fixed-arity 2, :fn-var true, :arglists (quote ([canvas block]))}, color-map {:name mytetris.core/color-map, :file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 65, :column 1, :end-line 65, :end-column 15, :meta {:file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 65, :column 6, :end-line 65, :end-column 15}, :tag cljs.core/IMap}, stop-game {:protocol-inline nil, :meta {:file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 219, :column 7, :end-line 219, :end-column 16, :arglists (quote ([state]))}, :name mytetris.core/stop-game, :variadic false, :file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :end-column 16, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 219, :end-line 219, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, state {:name mytetris.core/state, :file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 5, :column 1, :end-line 5, :end-column 139, :declared true, :meta {:file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 5, :column 134, :end-line 5, :end-column 139, :declared true}}, set-timer {:protocol-inline nil, :meta {:file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 136, :column 7, :end-line 136, :end-column 16, :arglists (quote ([dom-node state]))}, :name mytetris.core/set-timer, :variadic false, :file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :end-column 16, :method-params ([dom-node state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 136, :end-line 136, :max-fixed-arity 2, :fn-var true, :arglists (quote ([dom-node state]))}, can-move? {:protocol-inline nil, :meta {:file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 383, :column 7, :end-line 383, :end-column 16, :arglists (quote ([field pattern]))}, :name mytetris.core/can-move?, :variadic false, :file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :end-column 16, :method-params ([field pattern]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 383, :end-line 383, :max-fixed-arity 2, :fn-var true, :arglists (quote ([field pattern]))}, move-down {:protocol-inline nil, :meta {:file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 344, :column 7, :end-line 344, :end-column 16, :arglists (quote ([block]))}, :name mytetris.core/move-down, :variadic false, :file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :end-column 16, :method-params ([block]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 344, :end-line 344, :max-fixed-arity 1, :fn-var true, :arglists (quote ([block]))}, move-right {:protocol-inline nil, :meta {:file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 341, :column 7, :end-line 341, :end-column 17, :arglists (quote ([block]))}, :name mytetris.core/move-right, :variadic false, :file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :end-column 17, :method-params ([block]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 341, :end-line 341, :max-fixed-arity 1, :fn-var true, :arglists (quote ([block]))}, rot-right-internal {:protocol-inline nil, :meta {:file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 282, :column 7, :end-line 282, :end-column 25, :arglists (quote ([b]))}, :name mytetris.core/rot-right-internal, :variadic false, :file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :end-column 25, :method-params ([b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 282, :end-line 282, :max-fixed-arity 1, :fn-var true, :arglists (quote ([b]))}, top-of-field? {:protocol-inline nil, :meta {:file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 153, :column 7, :end-line 153, :end-column 20, :arglists (quote ([block]))}, :name mytetris.core/top-of-field?, :variadic false, :file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :end-column 20, :method-params ([block]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 153, :end-line 153, :max-fixed-arity 1, :fn-var true, :arglists (quote ([block]))}, draw-block {:protocol-inline nil, :meta {:file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 77, :column 7, :end-line 77, :end-column 17, :arglists (quote ([ctx block x y cell-w cell-h]))}, :name mytetris.core/draw-block, :variadic false, :file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :end-column 17, :method-params ([ctx block x y cell-w cell-h]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 77, :end-line 77, :max-fixed-arity 6, :fn-var true, :arglists (quote ([ctx block x y cell-w cell-h]))}, usage {:protocol-inline nil, :meta {:file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 226, :column 7, :end-line 226, :end-column 12, :arglists (quote ([]))}, :name mytetris.core/usage, :variadic false, :file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 226, :end-line 226, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, main-loop {:protocol-inline nil, :meta {:file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 169, :column 7, :end-line 169, :end-column 16, :arglists (quote ([dom-node state]))}, :name mytetris.core/main-loop, :variadic false, :file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :end-column 16, :method-params ([dom-node state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 169, :end-line 169, :max-fixed-arity 2, :fn-var true, :arglists (quote ([dom-node state]))}, score {:protocol-inline nil, :meta {:file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 163, :column 7, :end-line 163, :end-column 12, :arglists (quote ([l]))}, :name mytetris.core/score, :variadic false, :file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :end-column 12, :method-params ([l]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 163, :end-line 163, :max-fixed-arity 1, :fn-var true, :arglists (quote ([l]))}, initialize-state {:protocol-inline nil, :meta {:file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 110, :column 7, :end-line 110, :end-column 23, :arglists (quote ([state]))}, :name mytetris.core/initialize-state, :variadic false, :file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :end-column 23, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 110, :end-line 110, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, rot-right {:protocol-inline nil, :meta {:file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 285, :column 7, :end-line 285, :end-column 16, :arglists (quote ([block]))}, :name mytetris.core/rot-right, :variadic false, :file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :end-column 16, :method-params ([block]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 285, :end-line 285, :max-fixed-arity 1, :fn-var true, :arglists (quote ([block]))}, blocks {:name mytetris.core/blocks, :file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 261, :column 1, :end-line 261, :end-column 12, :meta {:file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 261, :column 6, :end-line 261, :end-column 12}, :tag cljs.core/IVector}, in-field? {:protocol-inline nil, :meta {:file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 370, :column 7, :end-line 370, :end-column 16, :arglists (quote ([f x y]))}, :name mytetris.core/in-field?, :variadic false, :file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :end-column 16, :method-params ([f x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 370, :end-line 370, :max-fixed-arity 3, :fn-var true, :arglists (quote ([f x y]))}, stop-timer {:protocol-inline nil, :meta {:file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 145, :column 7, :end-line 145, :end-column 17, :arglists (quote ([state]))}, :name mytetris.core/stop-timer, :variadic false, :file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :end-column 17, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 145, :end-line 145, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, erase-blocks {:protocol-inline nil, :meta {:file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 322, :column 7, :end-line 322, :end-column 19, :arglists (quote ([field])), :doc "0000.... 行を消して落とす"}, :name mytetris.core/erase-blocks, :variadic false, :file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :end-column 19, :method-params ([field]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 322, :end-line 322, :max-fixed-arity 1, :fn-var true, :arglists (quote ([field])), :doc "0000.... 行を消して落とす"}, score-field {:protocol-inline nil, :meta {:file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :line 45, :column 7, :end-line 45, :end-column 18, :arglists (quote ([state]))}, :name mytetris.core/score-field, :variadic false, :file "/Users/hhz/projects/mytetris/src/mytetris/core.cljs", :end-column 18, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}}, :cljs.spec/registry-ref [], :require-macros {r reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:y x :div.left :current-block :button.squre :div.right pattern y :next-block :component-did-mount :width :div.with-canvas :component-did-update :pos :field :type :div.score-field :on-click :interval-id :div :reagent-render pos type :score :count :canvas#field :canvas#next-block :div.erased :x :interval :div.usage :erased-lines :div.score :min-inteval :height :pattern}, :order [:component-did-update :component-did-mount :reagent-render :div.with-canvas :div.left :canvas#field :width :height :div.right :canvas#next-block :div.score-field :div.erased :erased-lines :div.score :score :button.squre :on-click :field :current-block :interval :interval-id :pos :y :next-block :count :min-inteval :div.usage :div :pattern :type :x x y type pattern pos]}, :doc nil}