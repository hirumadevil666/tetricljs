{:rename-macros {}, :renames {}, :externs {window {innerWidth {}, addEventListener {}, setInterval {}, clearInterval {}}, console {log {}}, document {getElementById {}}, Object {addEventListener {}}}, :use-macros {}, :excludes #{}, :name mytetris.core, :imports nil, :requires {r reagent.core, reagent.core reagent.core}, :cljs.spec/speced-vars [], :uses nil, :defs {block4 {:name mytetris.core/block4, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 240, :column 1, :end-line 240, :end-column 12, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 240, :column 6, :end-line 240, :end-column 12}, :tag cljs.core/IVector}, on-window-resize {:protocol-inline nil, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 10, :column 7, :end-line 10, :end-column 23, :arglists (quote ([evt]))}, :name mytetris.core/on-window-resize, :variadic false, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :end-column 23, :method-params ([evt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([evt]))}, rot-left {:protocol-inline nil, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 378, :column 7, :end-line 378, :end-column 15, :arglists (quote ([block]))}, :name mytetris.core/rot-left, :variadic false, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :end-column 15, :method-params ([block]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 378, :end-line 378, :max-fixed-arity 1, :fn-var true, :arglists (quote ([block]))}, initial-state {:name mytetris.core/initial-state, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 142, :column 1, :end-line 142, :end-column 19, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 142, :column 6, :end-line 142, :end-column 19}, :tag cljs.core/IMap}, main {:protocol-inline nil, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 178, :column 7, :end-line 178, :end-column 11, :arglists (quote ([]))}, :name mytetris.core/main, :variadic false, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 178, :end-line 178, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, unerase-line? {:protocol-inline nil, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 305, :column 7, :end-line 305, :end-column 20, :arglists (quote ([l]))}, :name mytetris.core/unerase-line?, :variadic false, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :end-column 20, :method-params ([l]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 305, :end-line 305, :max-fixed-arity 1, :fn-var true, :arglists (quote ([l]))}, key-down-handler {:protocol-inline nil, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 85, :column 7, :end-line 85, :end-column 23, :arglists (quote ([dom-node state]))}, :name mytetris.core/key-down-handler, :variadic false, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :end-column 23, :method-params ([dom-node state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 85, :end-line 85, :max-fixed-arity 2, :fn-var true, :arglists (quote ([dom-node state]))}, map->Block {:protocol-inline nil, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 284, :column 12, :end-line 284, :end-column 17, :internal-ctor true, :factory :map, :arglists (quote ([G__58990]))}, :name mytetris.core/map->Block, :variadic false, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :end-column 17, :method-params ([G__58990]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 284, :end-line 284, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__58990]))}, div-with-canvas {:protocol-inline nil, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 13, :column 7, :end-line 13, :end-column 22, :arglists (quote ([dom-node state]))}, :name mytetris.core/div-with-canvas, :variadic false, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :end-column 22, :method-params ([dom-node state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 2, :fn-var true, :arglists (quote ([dom-node state]))}, map->Pos {:protocol-inline nil, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 283, :column 12, :end-line 283, :end-column 15, :internal-ctor true, :factory :map, :arglists (quote ([G__58980]))}, :name mytetris.core/map->Pos, :variadic false, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :end-column 15, :method-params ([G__58980]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 283, :end-line 283, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__58980]))}, ->Block {:protocol-inline nil, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 284, :column 12, :end-line 284, :end-column 17, :internal-ctor true, :factory :positional, :arglists (quote ([type direction pos]))}, :name mytetris.core/->Block, :variadic false, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :end-column 17, :method-params ([type direction pos]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 284, :end-line 284, :max-fixed-arity 3, :fn-var true, :arglists (quote ([type direction pos]))}, get-block-pattern {:protocol-inline nil, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 293, :column 7, :end-line 293, :end-column 24, :arglists (quote ([block]))}, :name mytetris.core/get-block-pattern, :variadic false, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :end-column 24, :method-params ([block]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 293, :end-line 293, :max-fixed-arity 1, :fn-var true, :arglists (quote ([block]))}, select-block-index {:name mytetris.core/select-block-index, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 279, :column 1, :end-line 279, :end-column 24, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 279, :column 6, :end-line 279, :end-column 24}, :tag function}, window-width {:name mytetris.core/window-width, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 9, :column 1, :end-line 9, :end-column 18, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 9, :column 6, :end-line 9, :end-column 18}, :tag any}, Block {:num-fields 3, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name mytetris.core/Block, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :end-column 17, :type true, :column 12, :internal-ctor true, :line 284, :record true, :end-line 284, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, get-store-candidate {:protocol-inline nil, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 308, :column 7, :end-line 308, :end-column 26, :arglists (quote ([field])), :doc "消さないブロックのインデクスのシーケンスを返す"}, :name mytetris.core/get-store-candidate, :variadic false, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :end-column 26, :method-params ([field]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 308, :end-line 308, :max-fixed-arity 1, :fn-var true, :arglists (quote ([field])), :doc "消さないブロックのインデクスのシーケンスを返す"}, initial-field {:name mytetris.core/initial-field, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 303, :column 1, :end-line 303, :end-column 19, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 303, :column 6, :end-line 303, :end-column 19}, :tag any}, make-initial-state {:protocol-inline nil, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 149, :column 7, :end-line 149, :end-column 25, :arglists (quote ([]))}, :name mytetris.core/make-initial-state, :variadic false, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :end-column 25, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 149, :end-line 149, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, can-down? {:protocol-inline nil, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 408, :column 7, :end-line 408, :end-column 16, :arglists (quote ([field block]))}, :name mytetris.core/can-down?, :variadic false, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :end-column 16, :method-params ([field block]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 408, :end-line 408, :max-fixed-arity 2, :fn-var true, :arglists (quote ([field block]))}, draw-canvas-contents {:protocol-inline nil, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 66, :column 7, :end-line 66, :end-column 27, :arglists (quote ([canvas state]))}, :name mytetris.core/draw-canvas-contents, :variadic false, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :end-column 27, :method-params ([canvas state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :end-line 66, :max-fixed-arity 2, :fn-var true, :arglists (quote ([canvas state]))}, b2 {:name mytetris.core/b2, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 300, :column 1, :end-line 300, :end-column 8, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 300, :column 6, :end-line 300, :end-column 8}, :tag any}, field-width {:name mytetris.core/field-width, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 275, :column 1, :end-line 275, :end-column 17, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 275, :column 6, :end-line 275, :end-column 17}, :tag number}, set-block {:protocol-inline nil, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 367, :column 7, :end-line 367, :end-column 16, :arglists (quote ([field block]))}, :name mytetris.core/set-block, :variadic false, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :end-column 16, :method-params ([field block]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 367, :end-line 367, :max-fixed-arity 2, :fn-var true, :arglists (quote ([field block]))}, set-line {:protocol-inline nil, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 360, :column 7, :end-line 360, :end-column 15, :arglists (quote ([target data x]))}, :name mytetris.core/set-line, :variadic false, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :end-column 15, :method-params ([target data x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 360, :end-line 360, :max-fixed-arity 3, :fn-var true, :arglists (quote ([target data x]))}, field-height {:name mytetris.core/field-height, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 276, :column 1, :end-line 276, :end-column 18, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 276, :column 6, :end-line 276, :end-column 18}, :tag number}, init! {:protocol-inline nil, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 185, :column 7, :end-line 185, :end-column 12, :arglists (quote ([]))}, :name mytetris.core/init!, :variadic false, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 185, :end-line 185, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, generate-block {:protocol-inline nil, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 286, :column 7, :end-line 286, :end-column 21, :arglists (quote ([]))}, :name mytetris.core/generate-block, :variadic false, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 286, :end-line 286, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, move-left {:protocol-inline nil, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 333, :column 7, :end-line 333, :end-column 16, :arglists (quote ([block]))}, :name mytetris.core/move-left, :variadic false, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :end-column 16, :method-params ([block]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 333, :end-line 333, :max-fixed-arity 1, :fn-var true, :arglists (quote ([block]))}, set-main-loop {:protocol-inline nil, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 106, :column 7, :end-line 106, :end-column 20, :arglists (quote ([dom-node state handler]))}, :name mytetris.core/set-main-loop, :variadic false, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :end-column 20, :method-params ([dom-node state handler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 106, :end-line 106, :max-fixed-arity 3, :fn-var true, :arglists (quote ([dom-node state handler]))}, block3 {:name mytetris.core/block3, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 228, :column 1, :end-line 228, :end-column 12, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 228, :column 6, :end-line 228, :end-column 12}, :tag cljs.core/IVector}, ->Pos {:protocol-inline nil, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 283, :column 12, :end-line 283, :end-column 15, :internal-ctor true, :factory :positional, :arglists (quote ([x y]))}, :name mytetris.core/->Pos, :variadic false, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :end-column 15, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 283, :end-line 283, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y]))}, get-match-pattern {:protocol-inline nil, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 342, :column 7, :end-line 342, :end-column 24, :arglists (quote ([b]))}, :name mytetris.core/get-match-pattern, :variadic false, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :end-column 24, :method-params ([b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 342, :end-line 342, :max-fixed-arity 1, :fn-var true, :arglists (quote ([b]))}, game {:protocol-inline nil, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 161, :column 7, :end-line 161, :end-column 11, :arglists (quote ([]))}, :name mytetris.core/game, :variadic false, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 161, :end-line 161, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, key-down {:name mytetris.core/key-down, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 6, :column 1, :end-line 6, :end-column 138, :declared true, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 6, :column 130, :end-line 6, :end-column 138, :declared true}}, Pos {:num-fields 2, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name mytetris.core/Pos, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :end-column 15, :type true, :column 12, :internal-ctor true, :line 283, :record true, :end-line 283, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, block6 {:name mytetris.core/block6, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 262, :column 1, :end-line 262, :end-column 12, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 262, :column 6, :end-line 262, :end-column 12}, :tag cljs.core/IVector}, move-block {:protocol-inline nil, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 329, :column 7, :end-line 329, :end-column 17, :arglists (quote ([block x y]))}, :name mytetris.core/move-block, :variadic false, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :end-column 17, :method-params ([block x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 329, :end-line 329, :max-fixed-arity 3, :fn-var true, :arglists (quote ([block x y]))}, render-button {:protocol-inline nil, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 35, :column 7, :end-line 35, :end-column 20, :arglists (quote ([value on-click]))}, :name mytetris.core/render-button, :variadic false, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :end-column 20, :method-params ([value on-click]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 2, :fn-var true, :arglists (quote ([value on-click]))}, color-map {:name mytetris.core/color-map, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 38, :column 1, :end-line 38, :end-column 15, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 38, :column 6, :end-line 38, :end-column 15}, :tag cljs.core/IMap}, stop-game {:protocol-inline nil, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 153, :column 7, :end-line 153, :end-column 16, :arglists (quote ([state]))}, :name mytetris.core/stop-game, :variadic false, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :end-column 16, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 153, :end-line 153, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, state {:name mytetris.core/state, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 5, :column 1, :end-line 5, :end-column 138, :declared true, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 5, :column 133, :end-line 5, :end-column 138, :declared true}}, can-move? {:protocol-inline nil, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 391, :column 7, :end-line 391, :end-column 16, :arglists (quote ([field block]))}, :name mytetris.core/can-move?, :variadic false, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :end-column 16, :method-params ([field block]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 391, :end-line 391, :max-fixed-arity 2, :fn-var true, :arglists (quote ([field block]))}, move-down {:protocol-inline nil, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 339, :column 7, :end-line 339, :end-column 16, :arglists (quote ([block]))}, :name mytetris.core/move-down, :variadic false, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :end-column 16, :method-params ([block]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 339, :end-line 339, :max-fixed-arity 1, :fn-var true, :arglists (quote ([block]))}, on-click {:protocol-inline nil, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 173, :column 7, :end-line 173, :end-column 15, :arglists (quote ([ev]))}, :name mytetris.core/on-click, :variadic false, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :end-column 15, :method-params ([ev]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 173, :end-line 173, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ev]))}, move-right {:protocol-inline nil, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 336, :column 7, :end-line 336, :end-column 17, :arglists (quote ([block]))}, :name mytetris.core/move-right, :variadic false, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :end-column 17, :method-params ([block]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 336, :end-line 336, :max-fixed-arity 1, :fn-var true, :arglists (quote ([block]))}, top-of-field? {:protocol-inline nil, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 120, :column 7, :end-line 120, :end-column 20, :arglists (quote ([block]))}, :name mytetris.core/top-of-field?, :variadic false, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :end-column 20, :method-params ([block]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 120, :end-line 120, :max-fixed-arity 1, :fn-var true, :arglists (quote ([block]))}, draw-block {:protocol-inline nil, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 49, :column 7, :end-line 49, :end-column 17, :arglists (quote ([ctx block x y cell-w cell-h]))}, :name mytetris.core/draw-block, :variadic false, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :end-column 17, :method-params ([ctx block x y cell-w cell-h]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 6, :fn-var true, :arglists (quote ([ctx block x y cell-w cell-h]))}, main-loop {:protocol-inline nil, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 125, :column 7, :end-line 125, :end-column 16, :arglists (quote ([dom-node state]))}, :name mytetris.core/main-loop, :variadic false, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :end-column 16, :method-params ([dom-node state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 125, :end-line 125, :max-fixed-arity 2, :fn-var true, :arglists (quote ([dom-node state]))}, block0 {:name mytetris.core/block0, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 190, :column 1, :end-line 190, :end-column 12, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 190, :column 6, :end-line 190, :end-column 12}, :tag cljs.core/IVector}, block2 {:name mytetris.core/block2, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 216, :column 1, :end-line 216, :end-column 12, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 216, :column 6, :end-line 216, :end-column 12}, :tag cljs.core/IVector}, initialize-state {:protocol-inline nil, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 81, :column 7, :end-line 81, :end-column 23, :arglists (quote ([state]))}, :name mytetris.core/initialize-state, :variadic false, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :end-column 23, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, check-line {:protocol-inline nil, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 382, :column 7, :end-line 382, :end-column 17, :arglists (quote ([target data x]))}, :name mytetris.core/check-line, :variadic false, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :end-column 17, :method-params ([target data x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 382, :end-line 382, :max-fixed-arity 3, :fn-var true, :arglists (quote ([target data x]))}, block1 {:name mytetris.core/block1, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 203, :column 1, :end-line 203, :end-column 12, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 203, :column 6, :end-line 203, :end-column 12}, :tag cljs.core/IVector}, rot-right {:protocol-inline nil, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 375, :column 7, :end-line 375, :end-column 16, :arglists (quote ([block]))}, :name mytetris.core/rot-right, :variadic false, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :end-column 16, :method-params ([block]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 375, :end-line 375, :max-fixed-arity 1, :fn-var true, :arglists (quote ([block]))}, b {:name mytetris.core/b, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 299, :column 1, :end-line 299, :end-column 7, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 299, :column 6, :end-line 299, :end-column 7}, :tag any}, block5 {:name mytetris.core/block5, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 252, :column 1, :end-line 252, :end-column 12, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 252, :column 6, :end-line 252, :end-column 12}, :tag cljs.core/IVector}, blocks {:name mytetris.core/blocks, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 277, :column 1, :end-line 277, :end-column 12, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 277, :column 6, :end-line 277, :end-column 12}, :tag cljs.core/IVector}, stop-timer {:protocol-inline nil, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 112, :column 7, :end-line 112, :end-column 17, :arglists (quote ([state]))}, :name mytetris.core/stop-timer, :variadic false, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :end-column 17, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 112, :end-line 112, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, erase-blocks {:protocol-inline nil, :meta {:file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :line 318, :column 7, :end-line 318, :end-column 19, :arglists (quote ([field])), :doc "0000.... 行を消して落とす"}, :name mytetris.core/erase-blocks, :variadic false, :file "/Users/hhz 1/projects/mytetris/src/mytetris/core.cljs", :end-column 19, :method-params ([field]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 318, :end-line 318, :max-fixed-arity 1, :fn-var true, :arglists (quote ([field])), :doc "0000.... 行を消して落とす"}}, :cljs.spec/registry-ref [], :require-macros {r reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:y x :current-block :button.squre direction :else y :next-block :component-did-mount :width :div.with-canvas :component-did-update :pos :field :type :on-click :interval-id :div :reagent-render pos type :score :canvas#field :x :interval :direction :height}, :order [:component-did-update :component-did-mount :reagent-render :div.with-canvas :canvas#field :width :height :button.squre :on-click :field :current-block :pos :x :y :interval :interval-id :next-block :score :div x y :type :direction type direction pos :else]}, :doc nil}